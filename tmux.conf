#----------------------------------
#
#       General settings
#
#----------------------------------
if-shell "uname | grep -q Darwin" "source ~/.tmux.darwin.conf"
if-shell "uname | grep -q Linux" "source ~/.tmux.linux.conf"
set -g default-terminal "screen-256color"
set-option -g default-shell /usr/bin/fish
# Mouse support
set -g mouse on

set-option -gw xterm-keys on
set-option -gw set-clipboard on

# Use ctrl-a as prefix
#unbind C-b
#set -g prefix C-a
#bind C-a send-prefix

# UTF is great, let us use that
set -gq utf8
set-window-option -gq utf8 on

# command delay? We don't want that, make it short
set -sg escape-time 1

# Set the numbering of windows to go from 0
set-option -g base-index 0
setw -g pane-base-index 0

# Use xterm keys
set-window-option -g xterm-keys on

# synchronize panes with C-s
bind-key -n C-s setw synchronize-panes

#----------------------------------
#
#       Visual settings
#
#----------------------------------

# Status bar positioning
# set-option -g status-position top
set -g status-justify centre

set -g window-status-format ' #I:#W#F '
#set -g window-status-current-format ' #I:#W '
set -g window-status-current-format ' #I:#W:#F '

# ----- HUG theme
## Basic status bar colors
#set -g status-fg colour250
#set -g status-bg colour237
## Left side of status bar
#set -g status-left-bg colour233
#set -g status-left-fg colour243
#set -g status-left-length 40
#set -g status-left "#[fg=colour237,bg=colour130,bold] #S #[fg=colour130,bg=colour245,nobold]ÓÇ∞#[fg=colour233,bg=colour245] #(whoami) #[fg=colour245,bg=colour240]ÓÇ∞#[fg=colour230,bg=colour240] #I:#P #[fg=colour240,bg=colour237,nobold]ÓÇ∞"

## Right side of status bar
#set -g status-right-bg colour233
#set -g status-right-fg colour243
#set -g status-right-length 150
#set -g status-right "#{battery_icon}#{battery_percentage} | #{cpu_icon}#{cpu_percentage} | #[fg=colour240,bg=colour237]ÓÇ≤#[fg=colour230,bg=colour240] %H:%M:%S #[fg=colour245,bg=colour240]ÓÇ≤#[fg=colour233,bg=colour245] %d-%b-%y #[fg=colour130,bg=colour245]ÓÇ≤#[fg=colour233,bg=colour130,bold] #H "
# ----- END HUG theme

# ---- dark theme
#set -g status-bg colour235
#set -g status-fg white
#set-window-option -g mode-style bg=colour91,fg=white
#set-window-option -g window-status-bg colour235
#set-window-option -g window-status-fg colour244
#set-window-option -g window-status-current-bg colour235
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-attr dim

#set -g status-interval 1 # reload every 1s
#set -g status-left '#[bg=colour235,fg=colour244] #S | #I:#P '
#set -g status-right "#{battery_icon}#{battery_percentage} | #{cpu_icon} #{cpu_percentage} | %Y-%m-%d | #[fg=white]%H:%M:%S "
# ---- END dark theme

# ---- dark theme
set -g status-bg colour234
set -g status-fg white
set-window-option -g mode-style bg=colour91,fg=white
set-window-option -g window-status-bg colour234
set-window-option -g window-status-fg colour244
set-window-option -g window-status-current-bg colour234
set-window-option -g window-status-current-fg white
set-window-option -g window-status-attr dim

set -g status-interval 1 # reload every 1s
set -g status-left '#[bg=colour234,fg=colour244] #S | #I:#P '
set -g status-right "#{battery_icon}#{battery_percentage} | #{cpu_icon} #{cpu_percentage} | %Y-%m-%d | #[fg=white]%H:%M:%S "
# ---- END dark theme

set -g @batt_charging_icon "‚ö°Ô∏è"
set -g @batt_full_charge_icon "üåï"
set -g @batt_high_charge_icon "üåñ"
set -g @batt_medium_charge_icon "üåó"
set -g @batt_low_charge_icon "üåò"

set -g status-left-length 30
set -g status-right-length 50

set-option -g message-bg colour235
set-option -g message-fg colour166

set-option -g pane-border-fg colour172
set-option -g pane-active-border-fg colour172

# Allow us to reload our tmux configuration while using tmux.
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Getting interesting now, we use the vertical and horizontal symbols to split
# the screen
bind k split-window -h
bind j split-window -v
#bind | split-window -h
#bind - split-window -v

# Killing windows and panes
bind w kill-pane
bind q kill-window

# Override the default behavior of showing a window preview
bind s choose-session -N


#----------------------------------
#       Naviguation
#----------------------------------
bind-key v  select-window -t :-
#
# Moving between windows, gnome-terminal style
bind-key -n C-PgUp  select-window -t :-
bind-key -n C-PgDn  select-window -t :+

# open new window gnome-terminal style
bind-key -n C-T new-window

# move windows forward and backwards, gnome-terminal style
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# tmux move pane with C-arrows
bind-key -n C-Left  run "tmux select-pane -L"
bind-key -n C-Down  run "tmux select-pane -D"
bind-key -n C-Up    run "tmux select-pane -U"
bind-key -n C-Right run "tmux select-pane -R"
bind-key -n C-Space run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-Space') || tmux select-pane -l"

#----------------------------------
#       Vim integration
#----------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
#---------------------------------
# tmux plugins
#---------------------------------
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-urlview'

#---------------------------------
# resurrect settings
#---------------------------------
set -g @resurrect-capture-pane-contents 'on'

# Resurrect neovim sessions
set -g @resurrect-strategy-nvim 'session'

# Run the plugin manager, should be the last line of the tmux.conf
run '~/.tmux/plugins/tpm/tpm'

